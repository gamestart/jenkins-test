kind: pipeline
type: exec
name: windows-cpu

platform:
  os: windows
  arch: amd64

clone:
  depth: 1

steps:
  - name: build
    commands:
      - "$env:Path += ';C:/Program Files/CMake/bin'"
      - Copy-Item 'C:/onnxruntime' './third_party/onnxruntime' -Recurse
      - Copy-Item 'C:/opencv' './third_party/opencv' -Recurse
      - Copy-Item 'C:/TensorRT' './third_party/TensorRT' -Recurse
      - New-Item .\sdk\tutorial\build -ItemType Directory -ea 0
      - Set-Location .\sdk\tutorial\build
    when:
      event:
        - push
        - pull_request
        - tag
  - name: upload
    commands:
      - "$env:DEVICE = 'cpu'"
    when:
      event:
        - tag
trigger:
  branch:
    main

---

kind: pipeline
type: docker
name: linux

steps:
  - name: submodules
    image: alpine/git
    environment:
      REPO_REMOTE: https://github.com/gamestart/jenkins-test.git
      GITHUB_TOKEN:
        from_secret: GITHUB_TOKEN
    commands:
      - echo "https://$(echo $GITHUB_TOKEN)@github.com" > /root/.git-credentials
      - git config --global user.email xiaoxuan.tan@smartmore.com
      - git config --global user.name gamestart
      - git config --global credential.helper store
      - git submodule update --init --recursive --depth=1
    when:
      event:
        - push
        - pull_request
        - tag
      branch:
        - main

  - name: build-tag
    image: 192.168.100.12:5000/library/golang:1.0.5-vimo
    environment:
      DRONE: "true"
    commands:
      - echo $DRONE_TAG > .tags
      - cat .tags
    when:
      event:
        - tag
      branch:
        - main
      ref:
        - refs/tags/v*.*.*-release

  - name: docker-cpu
    image: plugins/docker
    settings:
      registry: [192.168.100.12:5000 , 192.168.100.21:5000]
      repo: 192.168.100.21:5000/test/test
      dockerfile: ./Dockerfile
      insecure: true
    when:
      event:
        - push
      branch:
        - main
      refs:
        include:
          - refs/tags/v*.*.*-release

trigger:
  branch:
    - main

image_pull_secrets:
  - dockerconfigjson 
